// Fragment shader:
// ================
#version 330 core
out vec4 FragColor;

in vec3 fragment_color;
in vec3 VertPos;
in vec3 Normal;

uniform vec3 lightDir;
uniform vec3 viewPos;
uniform vec3 lightColor;

void main()
{

    // ambient
    float ambientStrength = 0.3;
    vec3 ambient = ambientStrength * lightColor;    
    
     // diffuse 
	 //trick here for kind of global illumination
    float diff = max(dot(Normal, lightDir), 0.0);
	diff =  max(dot(Normal, -lightDir), diff);
    vec3 diffuse = diff * lightColor;
    
    // specular
    float specularStrength = 0.5;
    vec3 viewDir = normalize(viewPos-VertPos); 
    vec3 reflectDir = reflect(-lightDir, Normal);  
    float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32);
    vec3 specular = specularStrength * spec * lightColor; 
    
    vec3 result = (ambient + diffuse + specular) * fragment_color;
    FragColor = vec4(result, 1.0);
	//FragColor = vec4(fragment_color, 1.0);
}